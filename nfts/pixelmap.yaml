---
# Primary Info
title: PixelMap
blockchain: ethereum
creationTimestamp: Nov-17-2016 04:29:10 AM +UTC
excerpt: |
  Pixelmap is the oldest verified NFT collection on OpenSea, the first billboard style NFT, 
  and provides the ability to create, display, and immortalize artwork directly on the Blockchain.
totalSupply: 3970
contracts:
  - name: PixelMap OG Contract
    address: "0x015a06a433353f8db634df4eddf0c109882a15ab"
    notes: |
      All data for each tile is stored directly on the OG contract.  The
      image data for each tile is stored as hex triplets (768 char total), with
      Base91 encoding + PAKO compression to minimize gas fees.
  - name: PixelMap Wrapper,
    address: "0x050dc61dfb867e0fe3cf2948362b6c0f3faf790b"
    notes: |
      It's important to note, that the original PixelMap contract contains the
      ability to buy, sell, and update tiles.  The one thing it does NOT have,
      is the ability to transfer directly, or sell to a specific person.  In
      order to wrap a tile, you essentially have to list it for sale, and buy it
      from yourself.  Because ANYONE can buy it during the wrapping process, It's
      important to set it for sale at a price that you'd be happy with receiving the
      money if someone else buys it from you (always wrap above OpenSea floor!).

      Once wrapped, you can always transfer safely or sell to specific buyers, or
      even unwrap if you'd like.  You can wrap your tiles via the PixelMap.io website.
openseaCollection: https://opensea.io/collection/pixelmap
openseaVerification: true
wrapperContract:
  address: "0x050dc61dfb867e0fe3cf2948362b6c0f3faf790b"
  canUnwrapToOriginalToken: true
standard: Predates ERC-721
creators: ["@kenerwin88"]
activeDevelopment: true
logo: images/logo-pixelmap.png

rarityTools: https://rarity.tools/pixelmap

# Socials
twitter: "@PixelMapNFT"
discord: https://discord.gg/pixelmap
website: https://pixelmap.io

# Contract Specific Attributes
assetDataLocation: onchain
staticSupply: true
nonfungible: true

# Red Flags
flags: []

# Helpful Links
relatedLinks:
  - name: How to Update a PixelMap Tile
    link: https://pixelmap.medium.com/how-to-update-your-pixelmap-tile-3b9c1cd88b75
  - name: The Rediscovery of PixelMap
    link: https://adamamcbride.medium.com/pixel-map-lost-2016-nft-project-78fc00e62179
  - name: The "invisible" tile
    link: https://link.medium.com/KL5kH3ZA9ib

faq:
  - question: What is PixelMap?
    answer: Created in 2016, PixelMap is considered the second-oldest NFT, the
      first "billboard-style" on Ethereum, and provides the ability to create,
      display, and immortalize artwork directly on the Blockchain.

  - question: Where can I find the historical gitter chat from 2016?
    answer: https://gitter.im/Pixel-Map/Lobby (Chat dating back to the launch in 2016)
  - question: How do I get the Tile Owner role?
    answer: If you own a PixelMap tile, head to the collabland-join channel to verify and receive the "Tile Owner" role.
  - question: How many tiles are there?
    answer: 3,970 in total, numbered 0 through 3,969 (the last tile is invisible ;))
  - question: What's the difference between a wrapped and unwrapped tile?
    answer:
      PixelMap was launched in 2016, predating the ERC-721 standard by nearly a year.
      Because of that, while you can still buy/sell/update unwrapped tiles, to list
      them on exchanges like OpenSea, LooksRare, etc., they have to be "wrapped."
      Please note you can ALWAYS unwrap a wrapped tile and vice versa.
      Most people choose to leave theirs wrapped for ease of use.
  - question: Can you change tile images and metadata after you wrap?
    answer: Yes.  The wrapper exposes all OG contract functionality.
  - question: Who created PixelMap?
    answer: "Created by Ken Erwin (Discord: kendog2012#3125, Twitter: @kenerwin88)"
  - question: Which tile was the first to have an image?
    answer: "#1984, set to a spider.  Wallet owned by Ken, password is still unknown sadly! ðŸ˜„"
  - question: How much did it cost to buy a tile in 2016?
    answer: All 3,970 tiles were listed at 2E at launch.  At the time, that was
      roughly $20, with 20-30 sales.  Most tiles were relisted at 0.35E in August
      2021, selling instantly.  Others sold via lottery for 0.7E.  They now often sell for over $10k.
  - question: Can more PixelMap tiles be minted?
    answer: No, a limit of 3,970 is hardcoded into the original contract.
  - question: Why aren't there 3,970 tiles on OpenSea etc.?
    answer: Exchanges can only see "wrapped" tiles.  Most of the "unwrapped"
      tiles appear to be held by long-term HODLERS.
  - question: Are there many "DEAD" tiles that will never have an image?
    answer:
      No, the vast majority were sold in August 2021 (with a value over $10k+).
      It is unlikely that the wallets holding them are missing.  Most owners from
      2016 have been found, with an estimated ten tiles or less missing (and
      already have an image on them).
  - question: How do I wrap my tile?
    answer: Visit https://pixelmap.io/, log in with MetaMask, then click the
      "Wrapper" link at the top left.  It will guide you through the process.
      TLDR, you buy the tile from yourself using the wrapper contract.

  - question: How do I update my tile?
    answer: https://pixelmap.medium.com/how-to-update-your-pixelmap-tile-3b9c1cd88b75
  - question: Where can I read more about the history of PixelMap?
    answer: https://adamamcbride.medium.com/pixel-map-lost-2016-nft-project-78fc00e62179
  - question: How can I follow official PixelMap news?
    answer:
      "We regularly post updates in the announcements channel and tweet from https://twitter.com/pixelmapnft.
      For technical updates, all of PixelMap is open-sourced and available here:  https://github.com/Pixel-Map/pixelmap.io"
  - question: Is there a Dune Dashboard, how can we track distribution, etc.?
    answer:
      Yes! https://dune.xyz/rantum/NFT-Collection-Dashboard?contract_address=x050dc61dfb867e0fe3cf2948362b6c0f3faf790b --
      Please note, it can ONLY track wrapped tiles.
  - question: I want a tile, which one should I buy!
    answer:
      First off, welcome to the family :D.  Secondly, it ultimately depends on
      what you like!  Many people have placed a higher value on tiles near the center,
      on edges, on groups of tiles, or maybe you prefer the history of a specific tile?
      Also, you CAN update the image and URL on the tile (stored directly on-chain).
      A floor tile is always a safe bet, but if one looks a bit cooler for a bit
      more, we don't blame you.
  - question: What does on-chain mean?
    answer: Most NFTs do NOT store the art and other details on the Blockchain,
      as it is significantly cheaper to point to a link on IPFS or even a standard webserver.
  - question: How do I make a private sale on OpenSea?
    answer: https://docs.google.com/document/d/1ZK1Y0mTjxlVErhHx9werwV8podPtJ030xM2DpXasnuQ/edit?usp=sharing
  - question: What is the secret/invisible tile?
    answer: https://link.medium.com/KL5kH3ZA9ib
  - question: What was the "rediscovery"?
    answer: "In August 2021, Adam McBride, an NFT Archaeologist, discovered
      PixelMap's contract while digging for old projects.  He then located the
      creator (Ken Erwin) and helped revive the project (it had laid dormant from
      2017-2020, before the explosion in interest in NFTs).  You can read the
      original article here:  https://adamamcbride.medium.com/pixel-map-lost-2016-nft-project-78fc00e62179"
  - question: What is a PixelMap Time Capsule?
    answer: "Time Capsules document a period in PixelMap's history and are given
      to the owners of tiles that fit the requirements.  For example, the 'OG 18x18'
      time capsule celebrates the first 324 tiles (18x18) to have an image on them.
      You can read more about them here: https://pixelmap.io/timecapsule, or find
      them on OpenSea at https://opensea.io/collection/pixelmap-time-capsules."
analysis: |
  ## Background Story
  ![PixelMap](https://api.nftarchaeology.io/images/profile-pixelmap.png "PixelMap")
  A little over a decade ago, a website called MillionDollarHomePage.com was created by Alex Tew.  The page consisted (and still consists) 
  of a 1000x1000 pixel grid, with a total of 1,000,000 pixels being sold for $1 each.  Because the pixels themselves were too small to be 
  seen individually, they were sold in 10x10 pixel tiles for $100 each.  The purchasers of each tile then provided a 10x10 pixel image to be 
  used, as well as optionally a URL for the tile to link to.  Once an image had been configured for a given tile however, it could never be 
  changed (nor could the ownership of the tile).

  In many ways, **PixelMap.io** is similar to the MillionDollarHomepage.  There are a total of 1,016,064 pixels for sale (on a 1,296 x 784 grid).  This grid is broken up into 3,969 16x16 tiles, each at an initial price of 2 Ethereum.  However, unlike the MillionDollarHomepage.com, every single tile is controlled by a single contract on the Ethereum Blockchain.  This lends itself to the following benefits.

  * Each tile is truly owned by the entity that purchases it.  Because the data is stored on the Blockchain, nothing short of every single Ethereum node shutting down can eliminate the data.
  * The contract is designed so that in the event that a tile owner would like to update the image, change the URL the tile points to, or sell the tile for any amount they'd like, they can, without any central authority facilitating or controlling any part of the process.
  * In the event that PixelMap.io itself were to ever go down, the data, owner, and URLs for every single pixel remains on the Blockchain, and any site could easily replicate and display the overall image.  Essentially, the backend and database of the PixelMap.io is invincible as long as the Blockchain exists.  Additionally, we are looking into using Golem and/or IPFS to fully distribute the frontend as well.
  * The project is completely Open Source, which means anyone can view the code, audit the Solidity contract, or even set up more frontends if they'd like.  For instance, if someone wanted to set up an easier-to-use tile editor for PixelMap.io, they could, as all of the data is stored safely on the Ethereum blockchain.

  ## Quirks
  When PixelMap was created, the ERC-721 standard didn't yet exist.  The ability, to buy, update, and sell were all part of the 
  original 70 lines contract.  Unfortunately, the ability to do a wallet-to-wallet transfer without selling didn't exist, as the assumption 
  was that a seller wouldn't care WHO purchased a tile, only that they had the ability to sell them.  This wasn't an issue from 2016 though 
  2021, as any tiles purchased were done so directly from the contract.  
  
  However, with the creation of ERC-721 marketplaces (such as OpenSea 
  and LooksRare), the ability to do a direct transfer of the NFT is a hard requirement.  Thankfully, a wrapper contract was created that 
  allows all of the original behavior, in addition to providing a safe transfer function.  One caveat to that is that the act of wrapping 
  a tile requires that you must first purchase it from yourself, setting it at a price that is high enough that no one else poaches it from you (or if they do, you find the amount acceptable for the tile).  

  ## PixelMap.io Solidity Contract

  All pixel data for PixelMap.io is stored in 1 Tile Struct, consisting of 4 mapping variables, one for storing the owner, image, url, and 
  price, for every single tile.  Each tile is initially unowned, and is purchasable for 2 Ethereum.  Once purchased, (using the buyTile 
  function), the owner is set, and the price of the tile is set to 0.  A tile with a price of 0 cannot be purchased, and the price can 
  only be changed by the owner of the tile.  The setTile function allows an owner to update the image, URL, and price of any tiles that 
  they own.  If the price is set to a number above 0, then it essentially is up for sale, with the sale price going to the original owner.

  Each 16x16 tile image is stored as a 768 character hexadecimal string.  The color of each pixel is determined by a 3 character short 
  hexadecimal color, which means the 768 char string is the exact size needed to store 256 pixels, starting from left to right.  As an 
  example, let's look at storing the following image on PixelMap.io.

  ![Star Tile](https://github.com/Pixel-Map/pixelmap.io/raw/main/docs/star.png "Star Tile Example")

  This tile is stored as the following one-line string:
  ```

  ```

  However, if you break the string apart into 16 lines, it looks like the following:
  ![StarHex](https://github.com/Pixel-Map/pixelmap.io/raw/main/docs/starhex.png "Starhex")

  The 3 digit color codes can be easily referenced here: [https://en.wikipedia.org/wiki/Web_colors#Web-safe_colors](https://en.wikipedia.org/wiki/Web_colors#Web-safe_colors)
  On this image, the following colors were used:

  ![Colors](https://github.com/Pixel-Map/pixelmap.io/raw/main/docs/colors.png "Star Used Colors")

  We're currently working on a tile editor that should make it MUCH easier to
  generate the hexadecimal string, but it's currently a WIP.

  Once a pixel is updated, the website should update within about 5-10 minutes.  If for any reason it doesn't work, feel free to contact me at ken@devopslibrary.com.
  ```
  pragma solidity ^0.4.2;
  contract PixelMap {
      address creator;
      struct Tile {
          address owner;
          string image;
          string url;
          uint price;
      }
      mapping (uint => Tile) public tiles;
      event TileUpdated(uint location);

      // Original Tile Owner
      function PixelMap() {creator = msg.sender;}

      // Get Tile information at X,Y position.
      function getTile(uint location) returns (address, string, string, uint) {
          return (tiles[location].owner,
                  tiles[location].image,
                  tiles[location].url,
                  tiles[location].price);
      }

      // Purchase an unclaimed Tile for 2 Eth.
      function buyTile(uint location) payable {
          if (location > 3969) {throw;}
          uint price = tiles[location].price;
          address owner;

          // Make sure person doesn't already own tile.
          if (tiles[location].owner == msg.sender) {
              throw;
          }

          // If Unowned by the Bank, sell for 2Eth.
          if (tiles[location].owner == 0x0) {
              price = 2000000000000000000;
              owner = creator;
          }
          else {
              owner = tiles[location].owner;
          }
          // If the tile isn't for sale, don't sell it!
          if (price == 0) {
              throw;
          }

          // Pay for Tile.
          if (msg.value != price) {
              throw;
          }
          if (owner.send(price)) {
              tiles[location].owner = msg.sender;
              tiles[location].price = 0; // Set Price to 0.
              TileUpdated(location);
          }
          else {throw;}
      }

      // Set an already owned Tile to whatever you'd like.
      function setTile(uint location, string image, string url, uint price) {
          if (tiles[location].owner != msg.sender) {throw;} // Pixel not owned by you!
          else {
              tiles[location].image = image;
              tiles[location].url = url;
              tiles[location].price = price;
              TileUpdated(location);
          }
      }
  }

  ```

categories:
  - "Game"
  - "Billboard"
  - "Real Estate"
  - "Still Image"
  - "Customizable"