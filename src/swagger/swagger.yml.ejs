swagger: '2.0'
info:
  description: 'This is an automatically generated REST API endpoint for the `<%= repoName %>` repository within the `<%= orgName %>` organization.  For more information about ADDE, visit [adde.to/documentation](adde.to/documentation), or for information on Swagger, visit [http://swagger.io](http://swagger.io).'
  version: 1.0.0
  title: <%= orgName %>/<%= repoName %>
host: <%= domain %>:3000
basePath: /rest/<%= orgName %>/<%= repoName %>
tags: <% endpoints.forEach(function(endpoint) {
       const pluralName = Object.keys(endpoint)[0];
      %>
  - name: <%= pluralName %>
    description: Everything about your <%= pluralName %><% }); %>
paths: <% endpoints.forEach(function(endpoint) {
       const pluralName = Object.keys(endpoint)[0];
       const singularName = endpoint[pluralName].title;
       const propertyKeyNames = Object.keys(endpoint[pluralName].properties);
      %>
  /<%= pluralName %>:
    get:
      tags:
        - <%= pluralName %>
      summary: Retrieves <%= pluralName %> (Optionally filtered by field values)
      description: 'By default, this endpoint will return an array of all <%= pluralName %>.  You can optionally pass in field values for filtering the list down, provided via query string.'
      operationId: find<%= pluralName %>ByTags
      produces:
        - application/json
      parameters:<% propertyKeyNames.forEach(function(propertyName) {
        let type = endpoint[pluralName].properties[propertyName].type;
        if (type == "string" || type == "number" || type == "boolean" || type == "array") {%>
        - in: query
          name: <%= propertyName %>
          type: <%= endpoint[pluralName].properties[propertyName].type %><% } %>
        <% if (type == "array") {%> %>
          items: <%= endpoint[pluralName].properties[propertyName].items %>
<% }%>
<% }); %>

      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/<%= singularName %>'
        '400':
          description: Invalid tag value
      security:
        - auth:
            - 'read:repository'
  '/<%= pluralName %>/{id}':
    get:
      tags:
        - <%= pluralName %>
      summary: Find <%= singularName %> by ID
      description: Returns a single <%= singularName %>
      operationId: get<%= singularName %>ById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of <%= singularName %> to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/<%= singularName %>'
        '400':
          description: Invalid ID supplied
        '404':
          description: <%= singularName %> not found
      security:
        - auth:
            - 'read:repository'

   <% }); %>
externalDocs:
  description: <%= orgName %>/<%= repoName %> Repository
  url: 'https://github.com/<%= orgName %>/<%= repoName %>'
